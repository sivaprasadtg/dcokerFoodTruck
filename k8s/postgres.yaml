apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: foodtruck
  labels:
    app: postgres
spec:
  clusterIP: None
  selector:
    app: postgres
  ports:
    - port: 5432
      name: psql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: foodtruck
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # (optional but recommended) make volume perms friendly to postgres user (UID 999)
      securityContext:
        fsGroup: 999
      containers:
        - name: db
          image: postgres:18
          ports:
            - containerPort: 5432
              name: psql
          env:
            - name: POSTGRES_DB
              value: foodtruck
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_PASSWORD
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command: [ "sh", "-c", "pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\"" ]
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command: [ "sh", "-c", "pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\"" ]
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 1
              memory: 1Gi
      volumes:
        - name: init-sql
          configMap:
            name: db-init
  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
