apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: foodtruck
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      name: psql
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: foodtruck
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: db
          image: postgres:18
          ports:
            - containerPort: 5432
              name: psql
          env:
            - name: POSTGRES_DB
              value: foodtruck
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_PASSWORD
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command: ["pg_isready","-U","food","-d","foodtruck"]
            initialDelaySeconds: 10
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init
  namespace: foodtruck
data:
  # dummy key to ensure the ConfigMap exists even if applied before db-init-configmap.yaml
  placeholder: "replace by k8s/db-init-configmap.yaml (separate file)"
